import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, { useEffect, useRef, useState } from "react";
import WalletConnectProvider from "@walletconnect/web3-provider";
import Web3Modal from "Web3Modal"
import { providers } from 'ethers'

export default function Home() {

  const [walletConnected, setWalletConnected] = useState(false);
  const [isProv, setIsProv] = useState(false);
  const web3ModalRef = useRef();

  let provider;
  
  const getProviderOrSigner = async (needSigner = false) => {
    console.log("getProviderOrSigner Called...")
    if (!isProv) {
      provider = await web3ModalRef.current.connect();
      setIsProv(true);
    };
    const web3Provider = new providers.Web3Provider(provider);

    const { chainId } = await web3Provider.getNetwork();
    if (chainId !== 1) {
      window.alert("Change the network to ethereum");
      throw new Error("Change network to ethereum");
    }

    if (needSigner) {
      const signer = web3Provider.getSigner();
      return signer;
    }
    return web3Provider;
  };


  const providerOptions = {
    walletconnect: {
      package: WalletConnectProvider,
      options: {
        rpc: {
          1: 'https://mainnet.infura.io/v3/',
        },
        chainId: 1,
      },
    },
  };

  const connectWallet = async () => {
    try {
      web3ModalRef.current = new Web3Modal({
        providerOptions,
        cacheProvider: false,
        disableInjectedProvider: false,
      })
      await getProviderOrSigner();
      setWalletConnected(true);
      console.log("Wallet Connected");
    } catch (err) {
      console.error(err);
    }
  };

  const onDisconnect = async () => {
    try {
      setIsProv(false);
      await web3ModalRef.current.clearCachedProvider();
      provider = await web3ModalRef.current.clearCachedProvider();
      setWalletConnected(false);
      console.log("Disconnected");

    } catch (err) {
      console.error(err);
    }
  };

  useEffect( async () => {
    if (ethereum) {
      if (isProv) {
        provider = await web3ModalRef.current.connect();
      }
      
    }
    
  });

  return (
    <div>
      <Head>
        <title>WALLETCONNECT TEST</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.page}>
        <nav className={styles.navbar}>
            <div className={styles.logo}>
              <h1>HOME</h1>
            </div>
            <ul className={styles.navItems}>
              <li>About</li>
              <li>Contact</li>
              <li>Documentation</li>
              <li>Features</li>
            </ul>
          </nav>
        <div className={styles.main}>
          <h1>THIS IS HOW TO CONNECT WALLET</h1>
          <p>CLICK THE BUTTON BELOW</p>
          <button onClick={connectWallet} className={styles.connectBtn}>CONNECT WALLET</button>
          <br/>
          <h1>THIS IS HOW TO DISCONNECT WALLET</h1>
          <p>CLICK THE BUTTON BELOW</p>
          <button onClick={onDisconnect} className={styles.connectBtn}>DISCONNECT WALLET</button>
        </div>
      </div>
    </div>
  )
}